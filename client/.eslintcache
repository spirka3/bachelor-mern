[{"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\index.js":"1","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\App.js":"2","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\Footer.jsx":"3","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\Navigation.jsx":"4","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\Routes.js":"5","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\data.js":"6","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\functions.js":"7","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\SearchBar.jsx":"8","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\UserIcon.jsx":"9","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\BuilderModule.jsx":"10","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\modals\\NewModal.jsx":"11","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\ShowcaseLayout.jsx":"12","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\UserModal.jsx":"13","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Toggle.jsx":"14","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\TextGroupForm.jsx":"15","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\Image.jsx":"16","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\Card.jsx":"17","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\UserAvatar.jsx":"18","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\MyModal.jsx":"19","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\FetchComponents.jsx":"20","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\useDataApi.js":"21","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\buttons\\SmallButton.jsx":"22","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\LoginForm.jsx":"23","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\UserInfoForm.jsx":"24","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\UserPassForm.jsx":"25","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\RegisterForm.jsx":"26","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Toolbox.jsx":"27","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Gridbox.jsx":"28","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\Header.jsx":"29","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\Dash.jsx":"30","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\SideDrawer.jsx":"31","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\HideOnScroll.jsx":"32","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\BackToTop.jsx":"33","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\SideBar.jsx":"34","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\FormComponents.jsx":"35","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\CardForm.jsx":"36","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\ImageForm.jsx":"37","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\EditForm.jsx":"38","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\ImageEditor.jsx":"39","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NavModal.jsx":"40","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\treeData.js":"41","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\LogoutPage.jsx":"42","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\CustomPage.jsx":"43","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\AdminPage.jsx":"44","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\AuthPage.jsx":"45","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\ProfilePage.jsx":"46","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\TestPage.jsx":"47","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\Page404.jsx":"48","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\HomePage.jsx":"49","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\TreePage.jsx":"50","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\constants.js":"51","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\MUICard.jsx":"52","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\MUICardSide.jsx":"53","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NewPageModal.jsx":"54","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\NewPageForm.jsx":"55","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\PagesTable.jsx":"56","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\UsersTable.jsx":"57","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\UserRow.jsx":"58","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\PageRow.jsx":"59","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NavDropdownModal.jsx":"60"},{"size":262,"mtime":1615022985711,"results":"61","hashOfConfig":"62"},{"size":1128,"mtime":1615492703375,"results":"63","hashOfConfig":"62"},{"size":265,"mtime":1614443361320,"results":"64","hashOfConfig":"62"},{"size":3326,"mtime":1615448164126,"results":"65","hashOfConfig":"62"},{"size":2139,"mtime":1615493298858,"results":"66","hashOfConfig":"62"},{"size":2196,"mtime":1615307115713,"results":"67","hashOfConfig":"62"},{"size":1316,"mtime":1615377558599,"results":"68","hashOfConfig":"62"},{"size":849,"mtime":1615227673815,"results":"69","hashOfConfig":"62"},{"size":674,"mtime":1615227156591,"results":"70","hashOfConfig":"62"},{"size":1783,"mtime":1615293952322,"results":"71","hashOfConfig":"62"},{"size":2035,"mtime":1615022985678,"results":"72","hashOfConfig":"62"},{"size":2016,"mtime":1615022985671,"results":"73","hashOfConfig":"62"},{"size":1618,"mtime":1615493827335,"results":"74","hashOfConfig":"62"},{"size":585,"mtime":1615315342820,"results":"75","hashOfConfig":"62"},{"size":713,"mtime":1614430101316,"results":"76","hashOfConfig":"62"},{"size":319,"mtime":1614262590554,"results":"77","hashOfConfig":"62"},{"size":2877,"mtime":1615293952341,"results":"78","hashOfConfig":"62"},{"size":284,"mtime":1614077498104,"results":"79","hashOfConfig":"62"},{"size":747,"mtime":1614022545138,"results":"80","hashOfConfig":"62"},{"size":266,"mtime":1615302625226,"results":"81","hashOfConfig":"62"},{"size":559,"mtime":1615302393950,"results":"82","hashOfConfig":"62"},{"size":195,"mtime":1614007556427,"results":"83","hashOfConfig":"62"},{"size":486,"mtime":1614368205276,"results":"84","hashOfConfig":"62"},{"size":431,"mtime":1614502037018,"results":"85","hashOfConfig":"62"},{"size":692,"mtime":1614502037000,"results":"86","hashOfConfig":"62"},{"size":598,"mtime":1615494555564,"results":"87","hashOfConfig":"62"},{"size":946,"mtime":1614195982637,"results":"88","hashOfConfig":"62"},{"size":1829,"mtime":1614372749999,"results":"89","hashOfConfig":"62"},{"size":2234,"mtime":1615022985697,"results":"90","hashOfConfig":"62"},{"size":551,"mtime":1615022985694,"results":"91","hashOfConfig":"62"},{"size":1850,"mtime":1615022985708,"results":"92","hashOfConfig":"62"},{"size":319,"mtime":1615022985704,"results":"93","hashOfConfig":"62"},{"size":719,"mtime":1615022985692,"results":"94","hashOfConfig":"62"},{"size":902,"mtime":1615022985706,"results":"95","hashOfConfig":"62"},{"size":2706,"mtime":1615405220506,"results":"96","hashOfConfig":"62"},{"size":569,"mtime":1615288630188,"results":"97","hashOfConfig":"62"},{"size":597,"mtime":1614444735519,"results":"98","hashOfConfig":"62"},{"size":1800,"mtime":1614457777614,"results":"99","hashOfConfig":"62"},{"size":4229,"mtime":1614504067714,"results":"100","hashOfConfig":"62"},{"size":4306,"mtime":1615306982599,"results":"101","hashOfConfig":"62"},{"size":3396,"mtime":1614695672853,"results":"102","hashOfConfig":"62"},{"size":241,"mtime":1615228824829,"results":"103","hashOfConfig":"62"},{"size":1848,"mtime":1615493238707,"results":"104","hashOfConfig":"62"},{"size":350,"mtime":1615363151469,"results":"105","hashOfConfig":"62"},{"size":1018,"mtime":1615494387510,"results":"106","hashOfConfig":"62"},{"size":2141,"mtime":1615377161933,"results":"107","hashOfConfig":"62"},{"size":4558,"mtime":1615371032365,"results":"108","hashOfConfig":"62"},{"size":353,"mtime":1614337111322,"results":"109","hashOfConfig":"62"},{"size":771,"mtime":1615228824617,"results":"110","hashOfConfig":"62"},{"size":2375,"mtime":1615288583441,"results":"111","hashOfConfig":"62"},{"size":384,"mtime":1615215702708,"results":"112","hashOfConfig":"62"},{"size":1238,"mtime":1615279726620,"results":"113","hashOfConfig":"62"},{"size":1707,"mtime":1615280003637,"results":"114","hashOfConfig":"62"},{"size":494,"mtime":1615448690463,"results":"115","hashOfConfig":"62"},{"size":929,"mtime":1615668251882,"results":"116","hashOfConfig":"62"},{"size":1032,"mtime":1615493267499,"results":"117","hashOfConfig":"62"},{"size":1345,"mtime":1615382620096,"results":"118","hashOfConfig":"62"},{"size":1408,"mtime":1615382620117,"results":"119","hashOfConfig":"62"},{"size":4355,"mtime":1615456230544,"results":"120","hashOfConfig":"62"},{"size":2033,"mtime":1615396318141,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"5va9o3",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"124"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"124"},"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\index.js",[],["269","270"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\App.js",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\Footer.jsx",["271"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\r\n  const style = {\r\n\r\n  };\r\n\r\n  return null\r\n  return (\r\n    <div style={style}>\r\n      <a href=\"https://github.com/spirka3/bachelor-thesis\">Github repository</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\Navigation.jsx",["272"],"import React, { useState } from \"react\";\nimport { Navbar, Nav, NavLink, NavDropdown } from \"react-bootstrap\";\nimport { UserIcon } from \"./others/UserIcon\";\nimport { SearchBar } from \"./SearchBar\";\nimport Image from \"react-bootstrap/Image\";\nimport { useLocation } from \"react-router\";\nimport uuid from \"react-uuid\";\nimport SmallButton from \"./buttons/SmallButton\";\nimport NavModal from \"./modals/NavModal\";\nimport { delEdit, getEdit, setEdit } from \"../helpers/functions\";\nimport NewPageModal from \"./modals/NewPageModal\";\nimport { navs } from \"../helpers/data\";\n\n/** eheaeads */\nconst Navigation = ({ pages: _pages }) => {\n  const [pages, setPages] = useState(navs);\n\n  const [editMode, setEditMode] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showModal2, setShowModal2] = useState(false);\n  const openNav = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n  const closeModal2 = () => setShowModal2(false);\n\n  const editNav = () => {\n    openNav();\n  };\n\n  const newPage = () => {\n    setShowModal2(true);\n  };\n\n  const toggleEditor = () => {\n    getEdit() ? delEdit() : setEdit();\n    setEditMode(!editMode);\n  };\n\n  const CustomNavs = () => {\n    return navs\n      .filter((p) => p.type !== \"none\")\n      .map((p) => (\n        <div key={uuid()}>\n          {p.type === \"drop\" ? (\n            <DropDown page={p} />\n          ) : (\n            <NavLink href={p.path}>{p.title}</NavLink>\n          )}\n        </div>\n      ));\n  };\n\n  const DropDown = ({ page }) => (\n    <NavDropdown title={page.title} id={page.title}>\n      {page.children.map((child) => {\n        return (\n          <NavDropdown.Item href={child.path} key={child.path}>\n            {child.title}\n          </NavDropdown.Item>\n        );\n      })}\n    </NavDropdown>\n  );\n\n  const NavBrand = () => (\n    <Navbar.Brand href=\"/\">\n      <Image alt=\"logo\" src=\"/logo.png\" width=\"40\" height=\"40\" />\n    </Navbar.Brand>\n  );\n\n  const EditControls = () => (\n    <>\n      <SmallButton onClick={toggleEditor} className=\"m-2\">\n        Finish\n      </SmallButton>\n      <SmallButton onClick={newPage} className=\"m-2\">\n        New page\n      </SmallButton>\n      {/*<SmallButton onClick={editNav} className=\"m-2\">Edit nav</SmallButton>*/}\n      {/*<SmallButton onClick={undo} className=\"m-2\">Undo</SmallButton>*/}\n      {/*<SmallButton onClick={redo} className=\"m-2\">Redo</SmallButton>*/}\n    </>\n  );\n\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        <NavBrand />\n        <SearchBar />\n        <Navbar.Toggle />\n        <Navbar.Collapse>\n          {editMode ? (\n            <EditControls />\n          ) : (\n            <SmallButton onClick={toggleEditor}>Edit</SmallButton>\n          )}\n          <Nav className=\"ml-auto\" navbar activeKey={useLocation().pathname}>\n            <NavLink href=\"/test\">Tst</NavLink>\n            <NavLink href=\"/tree\">Tree</NavLink>\n            <CustomNavs />\n            <UserIcon />\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showModal && (\n        <NavModal\n          pages={pages.filter((p) => p.type !== \"none\")}\n          setPages={setPages}\n          closeModal={closeModal}\n        />\n      )}\n      {showModal2 && <NewPageModal closeModal={closeModal2} />}\n    </>\n  );\n};\n\nexport default Navigation;\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\Routes.js",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\data.js",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\functions.js",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\SearchBar.jsx",["273","274","275"],"import React from 'react'\r\nimport {Form, Button, Row, Container} from 'react-bootstrap';\r\nimport SmallButton from \"./buttons/SmallButton\";\r\n\r\nexport const SearchBar = () => {\r\n\r\n  const customStyle = {\r\n    // TODO display as one line\r\n  };\r\n\r\n  return (\r\n    <Form inline className={\"pr-1 \"} style={{customStyle}}>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        size=\"sm\"\r\n        style={{\r\n          borderTopRightRadius: '0', borderBottomRightRadius: '0',\r\n          float: 'left', display: 'inline', width: '60%'\r\n        }}\r\n      />\r\n      <SmallButton\r\n        variant=\"outline-light\"\r\n        style={{\r\n          borderTopLeftRadius: '0', borderBottomLeftRadius: '0',\r\n          float: 'left', display: 'inline', width: '40%'\r\n        }}\r\n      >\r\n        Search\r\n      </SmallButton>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\UserIcon.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\BuilderModule.jsx",["276","277"],"import React, {useState} from \"react\"\r\nimport Card from \"./Card\"\r\nimport Image from \"./Image\"\r\nimport SmallButton from \"../buttons/SmallButton\"\r\nimport {ButtonGroup, Col, Row} from \"react-bootstrap\"\r\nimport EditForm from \"./forms/EditForm\";\r\nimport {getEdit} from \"../../helpers/functions\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst BuilderModule = ({module: m, togglePin, onHide, onRemove}) => {\r\n\r\n  const [module, setModule] = useState(m);\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const showBtn = getEdit()\r\n\r\n  const Module = () => {\r\n    const props = {\r\n      id: module._id,\r\n      body: module.body\r\n    }\r\n    switch(module.type) {\r\n      case \"card\":  return <Card {...props} />\r\n      case \"image\": return <Image {...props} />\r\n      default:      return <h1>Not found type</h1>\r\n    }\r\n  }\r\n\r\n  const redirect = () => {\r\n    console.log('redirect')\r\n    return <Redirect to='www.google.com' />\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"toolbar\">Hello, I'm the Toolbar</h1>\r\n      <Module onClick={redirect} />\r\n      {showBtn &&\r\n        <ButtonGroup className=\"w-100\">\r\n          <SmallButton className=\"show-up\" onClick={() => setShowModal(true)}>\r\n            Edit\r\n          </SmallButton>\r\n          <SmallButton onClick={togglePin}>\r\n            {module.position.static ? 'Unpin' : 'Pin'}\r\n          </SmallButton>\r\n          <SmallButton onClick={onHide}>\r\n            Hide\r\n          </SmallButton>\r\n          <SmallButton onClick={onRemove}>\r\n            Remove\r\n          </SmallButton>\r\n        </ButtonGroup>\r\n      }\r\n      {showModal &&\r\n        <EditForm\r\n          module={module}\r\n          setModule={setModule}\r\n          setShowModal={setShowModal}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BuilderModule","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\modals\\NewModal.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\ShowcaseLayout.jsx",["278"],"import React, {useState} from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport {generateLayout} from \"../helpers/functions\";\r\nimport {ToolBox} from \"./others/Toolbox\";\r\n\r\nconst GridLayout = WidthProvider(Responsive);\r\n\r\nconst ShowcaseLayout = ({onLayoutChange}) => {\r\n\r\n  const createGridModules = () => {\r\n    console.log(layouts)\r\n    return _.map(layouts.lg, l => {\r\n      return (\r\n        <div key={l.i} className={l.static ? \"static\" : \"\"}>\r\n          <div className=\"hide-button\" onClick={() => onPutItem(l)}>\r\n            &times;\r\n          </div>\r\n          <span className=\"text\">{l.i}</span>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  const onTakeItem = item => {\r\n    setToolbox(prevState => {\r\n      return {\r\n        ...prevState,\r\n        lg: prevState.lg.filter(({ i }) => i !== item.i)\r\n      }\r\n    })\r\n\r\n    setLayouts(prevState => {\r\n      return {\r\n        ...prevState,\r\n        lg: [...prevState.lg, item]\r\n      }\r\n    })\r\n  };\r\n\r\n  const onPutItem = item => {\r\n    setToolbox(prevState => {\r\n      return {\r\n        ...prevState,\r\n        lg: [...(prevState.lg || []), item]\r\n      }\r\n    })\r\n    setLayouts(prevState => {\r\n      return {\r\n        ...prevState,\r\n        lg: prevState.lg.filter(({ i }) => i !== item.i)\r\n      }\r\n    })\r\n  };\r\n\r\n  const [toolbox, setToolbox] = useState({lg: [] })\r\n  const [layouts, setLayouts] = useState({lg: generateLayout()})\r\n\r\n  const compactType = 'vertical'\r\n  const animated = true\r\n\r\n  return (\r\n    <div>\r\n      <ToolBox\r\n        toolbox={toolbox.lg || []}\r\n        setToolbox={setToolbox}\r\n        setLayouts={setLayouts}\r\n      />\r\n      <GridLayout\r\n        layouts={layouts}\r\n        onLayoutChange={onLayoutChange}\r\n        compactType={compactType}\r\n        preventCollision={!compactType}\r\n        measureBeforeMount={!animated}\r\n        useCSSTransforms={animated}\r\n      >\r\n        {createGridModules()}\r\n      </GridLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowcaseLayout","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\UserModal.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Toggle.jsx",[],["279","280"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\TextGroupForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\Image.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\Card.jsx",["281"],"import React from 'react'\r\nimport {Card as C, Col, ResponsiveEmbed, Row} from 'react-bootstrap'\r\nimport '../../pages/card.css'\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst Card = ({id, body}) => {\r\n\r\n  const {img, title, text, style} = body\r\n  // className=\"w-100 h-100 module-grid\"\r\n\r\n  const ImageLeft = () => {\r\n    return (\r\n      <C style={{minWidth: '375px'}}>\r\n        <Row className=\"no-gutters\">\r\n          <div className=\"col-auto\">\r\n            <img src={img} className=\"img-fluid\" alt=\"\"/>\r\n          </div>\r\n          <div className=\"col\">\r\n            <C.Body className=\"px-2\">\r\n              <C.Title>{title}</C.Title>\r\n              <C.Text>{text}</C.Text>\r\n            </C.Body>\r\n          </div>\r\n        </Row>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageRight = () => {\r\n    return (\r\n      <C className=\"grid-module\">\r\n        <Row className=\"no-gutters\">\r\n          <Col>\r\n            <C.Body className=\"px-2\">\r\n              <C.Title>{title}</C.Title>\r\n              <C.Text className=\"overflow-dots\">{text}</C.Text>\r\n            </C.Body>\r\n          </Col>\r\n          <Col className=\"col-auto grid-module\">\r\n            <C.Img src={img} alt=\"\"/>\r\n          </Col>\r\n        </Row>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageTop = () => {\r\n    return (\r\n      <C key={id} className=\"grid-module\">\r\n        <C.Body className=\"p-0\">\r\n          <div className=\"p-1\">\r\n            <C.Title>{title}</C.Title>\r\n            <C.Text>{text}</C.Text>\r\n          </div>\r\n          <C.Img src={img} className=\"module-img\"/>\r\n        </C.Body>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageBackground = () => {\r\n    const imageStyle = {\r\n      backgroundColor: 'rgba(119,119,119,0.5)',\r\n      padding: '.75rem',\r\n      width: '100%'\r\n    }\r\n\r\n    return (\r\n      <C key={id} className=\"text-white grid-module\">\r\n        <C.Img src={img} alt=\"image\" className=\"grid-module\"/>\r\n        <C.ImgOverlay className=\"text-bottom d-flex p-0\">\r\n          <C.Title style={imageStyle} className=\"align-self-end\">{title}</C.Title>\r\n        </C.ImgOverlay>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const VideoBackground = () => {\r\n\r\n    return (\r\n      <ResponsiveEmbed aspectRatio=\"16by9\" className=\"grid-module\">\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src=\"https://www.youtube.com/embed/E7wJTI-1dvQ\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen/>\r\n      </ResponsiveEmbed>\r\n    )\r\n  }\r\n\r\n  const CardImage = () => {\r\n    switch (style) {\r\n      case 'l':\r\n        return <ImageLeft />\r\n      case 'r':\r\n        return <ImageRight />\r\n      case 'b':\r\n        return <ImageBackground />\r\n      case 'v':\r\n        return <VideoBackground />\r\n      default:\r\n        return <ImageTop />\r\n    }\r\n  }\r\n\r\n  return <CardImage />\r\n};\r\n\r\nexport default Card","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\UserAvatar.jsx",["282"],"import React from 'react'\r\nimport {Card as C, Image} from 'react-bootstrap'\r\n\r\nconst UserAvatar = ({userImage, handleClick}) => {\r\n  return (\r\n    <Image src={userImage} rounded onClick={handleClick} style={{width:\"60px\", height:\"60px\", margin: \"6px\"}}/>\r\n  )\r\n}\r\n\r\nexport default UserAvatar",["283","284"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\MyModal.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\FetchComponents.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\useDataApi.js",["285","286"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useDataApi = url => {\r\n\r\n  const [data, setData] = useState()\r\n  const [error, setError] = useState()\r\n\r\n  useEffect(() => {\r\n    console.log('url', url)\r\n    axios.get(url)\r\n      .then(response => {\r\n        setData(response.data)\r\n      })\r\n      .catch(err => {\r\n        setError(err)\r\n      })\r\n  }, [])\r\n\r\n  return [data, error]\r\n}\r\n\r\nexport default useDataApi","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\buttons\\SmallButton.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\LoginForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\UserInfoForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\UserPassForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\RegisterForm.jsx",["287"],"import React from \"react\";\nimport { Form, Input, Select, Submit, Error } from \"./FormComponents\";\n\nconst RegisterForm = ({ handleSubmit, authError }) => {\n  return (\n    <Form onSubmit={handleSubmit} className=\"my-form\">\n      <Input name=\"name\" required />\n      <Input name=\"email\" required />\n      <Input name=\"password\" type=\"password\" />\n      <Input\n        name=\"confirmPassword\"\n        type=\"password\"\n        placeholder=\"Confirm password\"\n      />\n      <Error error={authError} />\n      <Submit className=\"btn-block\">Register</Submit>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Toolbox.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\Gridbox.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\Header.jsx",[],["288","289"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\Dash.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\SideDrawer.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\HideOnScroll.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\BackToTop.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\toolbars\\SideBar.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\FormComponents.jsx",["290","291"],"import React, {useEffect} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {Button, Form as F, FormControl, FormGroup, FormLabel} from \"react-bootstrap\"\r\nimport {upperFirst} from \"lodash\";\r\nimport uuid from \"react-uuid\";\r\nimport {ExclamationTriangle} from \"react-bootstrap-icons\";\r\n\r\n// src: https://react-hook-form.com/advanced-usage/#SmartFormComponent\r\nexport function Form({ defaultValues, children, onSubmit, className, style }) {\r\n  const methods = useForm({ defaultValues });\r\n\r\n  const { handleSubmit, reset } = methods;\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <F onSubmit={handleSubmit(onSubmit)} className={className} style={style}>\r\n      {Array.isArray(children)\r\n        ? children.map(child => {\r\n          return child.props?.name\r\n            ? React.createElement(child.type, {\r\n              ...{\r\n                ...child.props,\r\n                register: methods.register,\r\n                key: child.props.name\r\n              }\r\n            })\r\n            : child;\r\n        })\r\n        : children\r\n      }\r\n    </F>\r\n  );\r\n}\r\n\r\nexport function Input({ register, name, label, placeholder, type='text', required,  ...rest }) {\r\n\r\n  label = label ? label : name\r\n  placeholder = placeholder ? placeholder : `Enter ${label}`\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormLabel>{upperFirst(label)}</FormLabel>\r\n      <FormControl\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        ref={register}\r\n        required={required}\r\n        {...rest}\r\n      />\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport function Select({ register, options, name, label, required, ...rest }) {\r\n\r\n  label = label ? label : name\r\n\r\n  const selectOptions = () => {\r\n    return (\r\n      <>\r\n        <option hidden value=\"\">Select option ...</option>\r\n        {options.map((value, i) => (\r\n          <option key={`${value}_${i}`} value={value}>{value}</option>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormLabel>{upperFirst(label)}</FormLabel>\r\n      <FormControl\r\n        as=\"select\"\r\n        name={name}\r\n        label={label}\r\n        ref={register({validate: v => v !== \"\"})}\r\n        required\r\n        {...rest}\r\n        // onChange={(e) => setSelectedType(e.target.value)}\r\n        // value={selectedType}\r\n      >\r\n        {selectOptions()}\r\n      </FormControl>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport function Submit({ register, variant='dark', ...rest }) {\r\n  return <Button type=\"submit\" variant={variant} {...rest} />\r\n}\r\n\r\nexport const Error = ({error}) => {\r\n  if (!error) {\r\n    return null\r\n  }\r\n  return <span style={{color: \"red\"}}><ExclamationTriangle/> {error}</span>\r\n}\r\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\CardForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\ImageForm.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\forms\\EditForm.jsx",["292"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport CardForm from \"../forms/CardForm\";\r\nimport ImageForm from \"../forms/ImageForm\";\r\n\r\nconst EditForm = ({module, setModule, setShowModal}) => {\r\n\r\n  const [origin, setOrigin] = useState(module);\r\n\r\n  const handleChange = (e) => {\r\n    const {value, name} = e.target\r\n    setModule(prevState => {\r\n      return {\r\n        ...prevState,\r\n        body: { ...prevState.body, [name]: value }\r\n      }\r\n    })\r\n  }\r\n\r\n  const stepBack = () => console.log('Not implemented')\r\n  const stepForward = () => console.log('Not implemented')\r\n  const reloadModule = () => setModule(origin)\r\n  const close = () => setShowModal(false)\r\n\r\n  function handleSubmit(data) {\r\n    console.log('submit data', data)\r\n\r\n    axios.patch('/modules/'+module._id, {\r\n    ...module,\r\n      body: data\r\n    })\r\n      .then(response => {\r\n        console.log(response)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const ModuleFormBody = () => {\r\n    // called as a function doubt does it mean anything?\r\n    const props = {module, handleChange, handleSubmit}\r\n\r\n    switch(module.type) {\r\n      case \"card\":  return <CardForm {...props} />\r\n      case \"image\": return <ImageForm {...props} />\r\n      default:      return <h1>module was not rendered</h1>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{module.type}</h1>\r\n      {ModuleFormBody()}\r\n      <ButtonGroup variant=\"light\">\r\n        <Button onClick={stepBack}>Back</Button>\r\n        <Button onClick={stepForward}>Forward</Button>\r\n        <Button onClick={reloadModule}>Reload</Button>\r\n        <Button onClick={close}>&times;</Button>\r\n      </ButtonGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditForm","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\others\\ImageEditor.jsx",["293","294","295","296","297","298","299"],"import React, {useState, createRef} from 'react'\r\nimport AvatarEditor from 'react-avatar-editor'\r\nimport Dropzone from \"react-dropzone\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst ImageEditor = ({src, saveImage}) => {\r\n  // doubt put all states into the image prop and into db?\r\n  // todo radius, width, height\r\n  const [image, setImage] = useState(`${src}`) // fixme not load\r\n  const [preview, setPreview] = useState()\r\n  const [scale, setScale] = useState(1)\r\n  const [rotate, setRotate] = useState(0)\r\n  const [radius, setRadius] = useState(0) // todo\r\n  const [position, setPosition] = useState({ x: 0.5, y: 0.5 });\r\n\r\n  const cropper = createRef()\r\n  const allowZoomOut = false\r\n\r\n  const getImage = () => cropper.current.getImageScaledToCanvas().toDataURL()\r\n  const handleDropImage = files => setImage(files[0])\r\n  const handleNewImage = e => setImage(e.target.files[0])\r\n  const handleRotate = e => setRotate(parseFloat(e.target.value)*3.6)\r\n  const handleScale = e => setScale(parseFloat(e.target.value))\r\n  const onPositionChange = xy => setPosition(xy)\r\n  const handlePreview = () => preview ? setPreview(null) : setPreview(getImage())\r\n  const handleSave = () => saveImage(getImage())\r\n\r\n  // todo https://codesandbox.io/s/pm8qpzo0v0?file=/src/components/ImageEditor.js\r\n  const toggleCropper = (isToggled) => {\r\n    // if (isToggled) {\r\n    //   this.setState({ selectorVisibleStyle: { display: 'inline-block' } });\r\n    //   this.setState({ mainCanvasVisibleStyle: { display: 'none' } });\r\n    // }\r\n    // else {\r\n    //   this.setState({ selectorVisibleStyle: { display: 'none' } });\r\n    //   this.setState({ mainCanvasVisibleStyle: { display: 'inline-block' } });\r\n    // }\r\n  }\r\n  const cropImage = () => {\r\n    // if (this.editor) {\r\n    //   console.log(\"The editor is: \"+ this.editor);\r\n    //   const canvas = this.editor.getImageScaledToCanvas();\r\n    //   this.setState({ imgCropData: canvas.toDataURL() });\r\n    //   this.toggleCropper(true);\r\n    // }\r\n  }\r\n  const downloadImage = () => {\r\n    // if (this.editor) {\r\n    //   const MyCanvas = this.editor.getImageScaledToCanvas();\r\n    //   MyCanvas.id = \"myCanvas\";\r\n    //   ReactDOM.render(MyCanvas, this.refs.imageEditorContainer);\r\n    //   console.log(MyCanvas);\r\n    //   canvasToImage('myCanvas',  {\r\n    //     name:  'Image',\r\n    //     type:  'jpg',\r\n    //     quality:  1\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: 250 }}>\r\n      {/* todo https://codesandbox.io/s/vxodd?file=/src/ImageComposer.js:1115-1120 */}\r\n      {/*<Dropzone*/}\r\n      {/*  onDrop={handleDrop}*/}\r\n      {/*  disableClick={true}*/}\r\n      {/*  multiple={false}*/}\r\n      {/*  style={{*/}\r\n      {/*    width: \"350px\",*/}\r\n      {/*    height: \"350px\",*/}\r\n      {/*    marginBottom: \"35px\"*/}\r\n      {/*  }}*/}\r\n      {/*>*/}\r\n      {preview\r\n        ? <img src={preview} />\r\n        : <AvatarEditor\r\n            ref={cropper}\r\n            image={image}\r\n            color={[255, 255, 255, 0.6]} // RGBA\r\n            position={position}\r\n            onPositionChange={onPositionChange}\r\n            scale={scale}\r\n            rotate={rotate}\r\n            borderRadius={radius}\r\n            height={200}\r\n            width={200}\r\n        />\r\n      }\r\n      {/*</Dropzone>*/}\r\n\r\n      <Form.Group>\r\n        <Form.File\r\n          onChange={handleNewImage}\r\n          id=\"custom-file\"\r\n          label=\"Custom file input\"\r\n          custom\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Zoom:</Form.Label>\r\n        <Form.Control\r\n          name=\"scale\"\r\n          type=\"range\"\r\n          onChange={handleScale}\r\n          min={allowZoomOut ? '0.1' : '1'}\r\n          max=\"4\"\r\n          step=\"0.01\"\r\n          defaultValue=\"1\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Rotate:</Form.Label>\r\n        <Form.Control\r\n          name=\"range\"\r\n          type=\"range\"\r\n          onChange={handleRotate}\r\n          step=\".5\"\r\n          defaultValue=\"1\"\r\n        />\r\n      </Form.Group>\r\n      <Button onClick={handlePreview}>Preview</Button>\r\n      <Button onClick={handleSave}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageEditor","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NavModal.jsx",["300","301","302","303","304","305","306"],"import React, {useEffect, useState} from \"react\"\r\nimport SortableTree, {toggleExpandedForAll, removeNodeAtPath} from \"react-sortable-tree\"\r\nimport {Button, Modal} from \"react-bootstrap\"\r\nimport {Typeahead} from 'react-bootstrap-typeahead'\r\nimport SmallButton from \"../buttons/SmallButton\"; // TODO replace\r\n\r\n// https://frontend-collective.github.io/react-sortable-tree/?path=/story/basics--add-and-remove-nodes-programmatically\r\nconst NavModal = ({pages, setPages, closeModal}) => {\r\n\r\n  const [hiddenPages, setHiddenPages] = useState([]);\r\n  const [toggle, setToggle] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState()\r\n  const [adding, setAdding] = useState()\r\n\r\n  const onChange = treeData => {\r\n    treeData.forEach(page => page.onNavBar = true)\r\n    setPages(treeData)\r\n  }\r\n\r\n  const onSearchTermChange = e => setSearchTerm(e.target.value)\r\n\r\n  const getNodeKey = ({ treeIndex }) => treeIndex\r\n\r\n  const expand = () => {\r\n    const expanded = !toggle\r\n    setToggle(expanded)\r\n    setPages(toggleExpandedForAll({treeData: pages, expanded}))\r\n  }\r\n\r\n  const addNav = () => {\r\n    const newOnNav = adding[0]\r\n    newOnNav.onNavBar = true\r\n    setHiddenPages(hiddenPages.filter(page => page.title !== newOnNav.title))\r\n    setPages([...pages, newOnNav])\r\n  }\r\n\r\n  const RemoveButton = ({node, path}) => {\r\n\r\n    const removeChild = (removedChild) => {\r\n      const update = []\r\n      pages.forEach(page => {\r\n        const children = page.children.filter(child => child._id !== removedChild._id)\r\n        update.push({\r\n          ...page,\r\n          children\r\n        })\r\n      })\r\n      // const update = pages.map(page => page.children.filter(child => child._id !== removedChild._id))\r\n      setPages(update)\r\n    }\r\n    const hide = (_id) => {\r\n      setPages(prev => {\r\n        const idx = prev.findIndex(p => p._id === _id);\r\n        prev[idx].hide = true\r\n        return prev\r\n      })\r\n      console.log('hide')\r\n    }\r\n\r\n    function removePage() {\r\n      const removed = pages\r\n        .map(page => {\r\n          if (page._id === node._id) return page\r\n          return page.children.find(child => child._id === node._id)\r\n        })\r\n        .filter(p => p)\r\n      removed.forEach(page => page.onNavBar = false)\r\n\r\n      const children = removed\r\n        .map(page => page.children)\r\n        .flat()\r\n      children.forEach(page => page.onNavBar = false)\r\n\r\n      setHiddenPages([...hiddenPages, ...removed, ...children])\r\n      setPages(removeNodeAtPath({treeData: pages, path, getNodeKey}))\r\n    }\r\n\r\n    return <button onClick={removePage}>Hide</button>\r\n  }\r\n\r\n  const HideButton = ({path}) => {\r\n    // TODO hidePage from public\r\n    function removeNav() {\r\n      const remaining = removeNodeAtPath({pages, path, getNodeKey})\r\n      const removed = pages.filter(n => !remaining.includes(n))\r\n      const children = removed.map(page => page.children).flat()\r\n      setHiddenPages([...hiddenPages, ...removed, ...children])\r\n      setPages(remaining)\r\n    }\r\n\r\n    return <button>Hide</button>\r\n  }\r\n\r\n  const HomeButton = ({path}) => {\r\n    // TODO save as the home page\r\n    // TODO show onHover\r\n    return <button>Home</button>\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Modal show={true} onHide={closeModal} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Custom pages</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Typeahead\r\n          name=\"newNav\"\r\n          labelKey={e => `${e.title} ${e.path}`}\r\n          onChange={setAdding}\r\n          options={hiddenPages}\r\n          placeholder=\"Choose an employees...\"\r\n        />\r\n        <SmallButton onClick={addNav}>Add</SmallButton>\r\n        <div style={{ height: 600, width: 800 }}>\r\n          <SmallButton onClick={expand}> {toggle ? 'shrink' : 'expand'} </SmallButton>\r\n          <label>Search: </label>\r\n          <input onChange={onSearchTermChange} />\r\n          <SortableTree\r\n            treeData={pages}\r\n            onChange={treeData => onChange(treeData)}\r\n            searchQuery={searchTerm}\r\n            maxDepth={2}\r\n            generateNodeProps={(props) => ({\r\n              buttons: [ <RemoveButton {...props} /> ]\r\n            })}\r\n          />\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default NavModal;\r\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\helpers\\treeData.js",[],["307","308"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\LogoutPage.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\CustomPage.jsx",["309"],"import React, { useEffect, useState } from \"react\";\nimport { ButtonGroup } from \"react-bootstrap\";\nimport NewModal from \"../components/modules/modals/NewModal\";\nimport BuilderModule from \"../components/modules/BuilderModule\";\nimport SmallButton from \"../components/buttons/SmallButton\";\nimport axios from \"axios\";\n\nconst CustomPage = ({ page }) => {\n  const [modules, setModules] = useState([]);\n  const [moduleType, setModuleType] = useState(false);\n\n  useEffect(() => {\n    document.title = page.title;\n    axios\n      .get(`/modules/page/${page._id}`)\n      .then((response) => {\n        setModules(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const Toolbar = () => {\n    const handleClick = () => {\n      axios\n        .patch(`/pages/${page._id}`, {\n          published: !page.published,\n        })\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    return (\n      <SmallButton className=\"corner-toolbar\" onClick={handleClick}>\n        {\"\" + page.published}\n      </SmallButton>\n    );\n  };\n\n  const Toolbar2 = () => (\n    <>\n      <ButtonGroup onClick={(e) => setModuleType(e.target.name)}>\n        <SmallButton variant=\"dark\" name=\"card\">\n          Create card module\n        </SmallButton>\n        <SmallButton variant=\"dark\" name=\"image\">\n          Create image module\n        </SmallButton>\n      </ButtonGroup>\n      {moduleType && (\n        <NewModal\n          pageId={page._id}\n          moduleType={moduleType}\n          setShowModal={setModuleType}\n        />\n      )}\n    </>\n  );\n\n  const Modules = () => modules.map((m) => <BuilderModule module={m} />);\n\n  return (\n    <>\n      <Toolbar />\n      <Modules />\n      <Toolbar2 />\n    </>\n  );\n};\n\nexport default CustomPage;\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\AdminPage.jsx",["310","311","312"],"import React, {useState} from 'react'\r\nimport PageTable from \"../components/tables/PagesTable\";\r\n\r\nconst AdminPage = ({pages}) => {\r\n\r\n  const [table, setTable] = useState('');\r\n  const handleAccept = () => {}\r\n\r\n  return (\r\n    <>\r\n      <PageTable pages={pages}/>\r\n      {/*<PageTable pages={pages}/>*/}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminPage",["313","314"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\AuthPage.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\ProfilePage.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\TestPage.jsx",["315","316","317"],"import React, {useEffect, useState} from \"react\"\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {FetchError, FetchLoading} from \"../components/others/FetchComponents\";\r\nimport useDataApi from \"../helpers/useDataApi\";\r\nimport SmallButton from \"../components/buttons/SmallButton\";\r\nimport NewModal from \"../components/modules/modals/NewModal\";\r\nimport {ToolBox} from \"../components/others/Toolbox\";\r\nimport {createGridBox} from \"../components/others/Gridbox\";\r\n\r\nconst GridLayout = WidthProvider(Responsive);\r\n\r\nconst TestPage = ({id='6033bbe31cbae847806d310d'}) => {\r\n\r\n  const [data, isLoaded, error] = useDataApi('/modules/page/'+id)\r\n\r\n  const [moduleType, setModuleType] = useState('')\r\n  const [modules, setModules] = useState([]);\r\n  const [layouts, setLayouts] = useState({lg: []})\r\n  const [toolbox, setToolbox] = useState({lg: []})\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModules(data)\r\n      const hidden = []\r\n      const shown = []\r\n      data.forEach(m => {\r\n        const withId = {...m.position, i: m._id} // i is required from GridLayout\r\n        m.position.hide ? hidden.push(withId) : shown.push(withId)\r\n      })\r\n      setLayouts({lg: shown}) // lg is required from GridLayout\r\n      setToolbox({lg: hidden})\r\n    }\r\n  }, [data])\r\n\r\n  if (error) return <FetchError e={error.message} />\r\n  if (!isLoaded || !data) return <FetchLoading />\r\n\r\n  const compactType = 'vertical'\r\n  const animated = true\r\n\r\n  const onLayoutChange = (layout) => {\r\n    console.log('changed layout to', layout)\r\n    setLayouts({lg: layout})\r\n  }\r\n\r\n  const getModule = id => modules.find(m => m._id === id)\r\n\r\n  const save = () => {\r\n    savePositions()\r\n    hideModules()\r\n  }\r\n\r\n  const savePositions = () => {\r\n    layouts.lg.map(layout => {\r\n      axios.patch('/modules/'+layout.i, {\r\n        ...getModule(layout.i),\r\n        position: layout\r\n      })\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    })\r\n  }\r\n\r\n  const hideModules = () => {\r\n    toolbox.lg.map(layout => {\r\n      axios.patch('/modules/'+layout.i, {\r\n        ...getModule(layout.i),\r\n        position: {\r\n          ...layout,\r\n          hide: true\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    })\r\n  }\r\n\r\n  const addCard = () => {\r\n    const newModule = {\r\n      page: id,\r\n      name: \"moduleXY\",\r\n      type: 'card',\r\n      position: {\r\n        x: 0,\r\n        y: 0,\r\n        w: 3,\r\n        h: 2,\r\n        static: false\r\n      },\r\n      body: data,\r\n      status: \"active\"\r\n    }\r\n    addToDb(newModule)\r\n  }\r\n\r\n  const addToDb = (newModule) => {\r\n    axios.post('/modules', newModule)\r\n      .then(response => {\r\n        const addedModule = response.data\r\n        const positionWithId = {\r\n          ...addedModule.position,\r\n          i: addedModule._id\r\n        }\r\n        setModules(prev => [...prev, {\r\n          ...addedModule,\r\n          position: positionWithId\r\n        }])\r\n        setLayouts(prev => {\r\n          return {\r\n            lg: [...prev.lg, positionWithId]\r\n          }\r\n        })\r\n        console.log(response)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToolBox\r\n        toolbox={toolbox.lg}\r\n        setToolbox={setToolbox}\r\n        setLayouts={setLayouts}\r\n      />\r\n      <SmallButton onClick={addCard} variant=\"dark\">+card</SmallButton>\r\n      {/*<ButtonGroup onClick={(e) => setModuleType(e.target.name)}>*/}\r\n      {/*  <SmallButton variant=\"dark\" name=\"card\">+card</SmallButton>*/}\r\n      {/*  <SmallButton variant=\"dark\" name=\"image\">+image</SmallButton>*/}\r\n      {/*</ButtonGroup>*/}\r\n      <SmallButton onClick={save} variant=\"dark\">save grid</SmallButton>\r\n      <GridLayout\r\n        layouts={layouts}\r\n        onLayoutChange={onLayoutChange}\r\n        compactType={compactType}\r\n        preventCollision={!compactType}\r\n        measureBeforeMount={!animated}\r\n        useCSSTransforms={animated}\r\n      >\r\n        {createGridBox(modules, layouts.lg, setLayouts, setToolbox)}\r\n      </GridLayout>\r\n      {moduleType &&\r\n        <NewModal\r\n          pageId={id}\r\n          moduleType={moduleType}\r\n          setModules={setModules}\r\n          setShowModal={setModuleType}\r\n          setLayouts={setLayouts}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\Page404.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\HomePage.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\TreePage.jsx",["318","319","320"],"import React from \"react\";\r\nimport {Card as C, Container, Row} from \"react-bootstrap\";\r\nimport './card.css'\r\nimport MUICard from \"../components/modules/MUICard\";\r\nimport MUICardSide from \"../components/modules/MUICardSide\";\r\n\r\nconst TreePage = () => {\r\n\r\n  const {title, text, img} = {\r\n    title: 'Title',\r\n    text: 'Here’s the source code for creating source code for creating these styles. Note that column overrides are scoped to only the first children columns',\r\n    img: '//placehold.it/200'\r\n  }\r\n\r\n  const ImageLeft = () => {\r\n    return (\r\n      <C style={{minWidth: '375px'}}>\r\n        <Row className=\"no-gutters\">\r\n          <div className=\"col-auto\">\r\n            <img src={img} className=\"img-fluid\" alt=\"\"/>\r\n          </div>\r\n          <div className=\"col\">\r\n            <C.Body className=\"px-2\">\r\n              <C.Title>{title}</C.Title>\r\n              <C.Text>{text}</C.Text>\r\n            </C.Body>\r\n          </div>\r\n        </Row>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageRight = () => {\r\n    return (\r\n      <C style={{minWidth: '375px'}}>\r\n        <Row className=\"no-gutters\">\r\n          <div className=\"col\">\r\n            <C.Body className=\"px-2\">\r\n              <C.Title>{title}</C.Title>\r\n              <C.Text className=\"overflow-dots\">{text}</C.Text>\r\n            </C.Body>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <img src={img} className=\"img-fluid\" alt=\"\"/>\r\n          </div>\r\n        </Row>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageTop = () => {\r\n    return (\r\n      <C>\r\n        <C.Img variant=\"top\" src={img}/>\r\n        <C.Body>\r\n          <C.Title>{title}</C.Title>\r\n          <C.Text>{text}</C.Text>\r\n        </C.Body>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  const ImageBackground = () => {\r\n\r\n    const imageStyle = {\r\n      backgroundColor: 'rgba(119,119,119,0.5)',\r\n      padding: '.75rem',\r\n      width: '100%'\r\n    }\r\n\r\n    return (\r\n      <C className=\"bg-dark text-white\">\r\n        <C.Img src={img} alt=\"Card image\" />\r\n        <C.ImgOverlay className=\"text-bottom d-flex\">\r\n          <C.Title style={imageStyle} className=\"align-self-end\">{title}</C.Title>\r\n        </C.ImgOverlay>\r\n      </C>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ImageBackground />\r\n      <br/>\r\n      <ImageLeft />\r\n      <br/>\r\n      <ImageRight />\r\n      <br/>\r\n      <ImageTop />\r\n      <br/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreePage","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\pages\\constants.js",[],["321","322"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\MUICard.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modules\\MUICardSide.jsx",["323","324","325","326","327"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n}));\r\n\r\nexport default function MUICardSide() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            Live From Space\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            Mac Miller\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image=\"//placehold.it/200\"\r\n        title=\"Live from space album cover\"\r\n      />\r\n    </Card>\r\n  );\r\n}","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NewPageModal.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\forms\\NewPageForm.jsx",["328","329"],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\PagesTable.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\UsersTable.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\UserRow.jsx",[],"C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\tables\\PageRow.jsx",["330"],"import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Form } from \"react-bootstrap\";\nimport uuid from \"react-uuid\";\nimport ReactTooltip from \"react-tooltip\";\nimport SmallButton from \"../buttons/SmallButton\";\nimport axios from \"axios\";\nimport NavDropdownModal from \"../modals/NavDropdownModal\";\n\nconst PageRow = ({ page, pages, columns }) => {\n  const [navbar, setNavbar] = useState(page.navbar);\n  const [published, setPublished] = useState(page.published);\n  const [showModal, setShowModal] = useState(false);\n\n  const NavToolTip = () => {\n    return (\n      <ReactTooltip id=\"drop\" place=\"right\" effect=\"solid\" clickable>\n        <div className=\"text-center\">\n          <p>\n            <strong>{navbar?.title}</strong>\n          </p>\n          {navbar.children?.map((p) => (\n            <p>{p.title} &times;</p>\n          ))}\n          <SmallButton variant=\"light\">edit</SmallButton>\n        </div>\n      </ReactTooltip>\n    );\n  };\n\n  const NavButtons = () => {\n    const type = navbar.type;\n    console.log(type);\n\n    const active = (id) => id === type;\n\n    const handleChange = (e) => {\n      setNavbar({\n        ...navbar,\n        type: e.target.id,\n      });\n    };\n\n    return (\n      <ButtonGroup size=\"sm\" onClick={handleChange}>\n        <Button id=\"none\" active={active(\"none\")}>\n          off\n        </Button>\n        <Button id=\"flat\" active={active(\"flat\")}>\n          on\n        </Button>\n        <Button\n          id=\"drop\"\n          active={active(\"drop\")}\n          data-tip\n          data-for=\"drop\"\n          data-tip-disable={!active(\"drop\")}\n          onClick={() => setShowModal(true)}\n        >\n          drop\n        </Button>\n        {active(\"drop\") && <NavToolTip />}\n      </ButtonGroup>\n    );\n  };\n\n  const Toggle = () => {\n    const toggle = published;\n\n    const handleChange = () => {\n      axios\n        .patch(`pages/${page._id}`, { published: !toggle })\n        .then((response) => {\n          setPublished(!toggle);\n          console.log(\"success\", response);\n        })\n        .catch((err) => {\n          console.log(\"error\", err.response);\n        });\n    };\n\n    return (\n      <Form.Switch\n        id={uuid()}\n        checked={toggle}\n        label={`${toggle}`}\n        onChange={handleChange}\n      />\n    );\n  };\n\n  // const notUnique = (innerHTML) => {\n  //   let update = []\n  //   for (const page in Object.keys(pages)) {\n  //     if (page.title === innerHTML) {\n  //       update = undefined\n  //       break\n  //     }\n  //     if (page._id) {\n  //       // save index\n  //     }\n  //   }\n  //   if (update) {\n  //     // setPages(update)\n  //   } else {\n  //     // console.log('NOT UNIQUE')\n  //   }\n  //   return pages.find(p => p.path === innerHTML)\n  // }\n\n  const editable = [\"title\", \"path\", \"description\"];\n  const isEditable = (field) => editable.includes(field);\n\n  const handleChange = ({ currentTarget: { textContent } }) => {\n    // if (notUnique(textContent)) {\n    //   console.log('NOT UNIQUE')\n    // }\n    // console.log(textContent)\n  };\n\n  const Cell = ({ field }) => {\n    let body = page[field];\n    // const editable = isEditable(field)\n    const editable = false;\n\n    if (field === \"navbar.type\") body = <NavButtons />;\n    if (field === \"published\") body = <Toggle />;\n    if (field === \"created_by\") body = <span>Full name</span>;\n    if (field === \"commits\") body = <span>commits</span>; // TODO as Github\n    if (field === \"content\") body = <span>json</span>; // TODO openModal\n\n    return (\n      <td key={field} contentEditable={editable} onBlur={handleChange}>\n        {body}\n      </td>\n    );\n  };\n\n  return (\n    <>\n      <tr key={page.title} data-tip data-for={page.title}>\n        {columns.map((col) => (\n          <Cell field={col.field} />\n        ))}\n      </tr>\n      {showModal && (\n        <NavDropdownModal\n          pages={pages}\n          navbar={navbar}\n          setNavbar={setNavbar}\n          showModal={showModal}\n          setShowModal={setShowModal}\n        />\n      )}\n      <ReactTooltip\n        id={page.title}\n        place=\"left\"\n        effect=\"solid\"\n        border={false}\n        type=\"light\"\n        delayHide={250}\n        delayShow={250}\n        delayUpdate={250}\n      >\n        {/* TODO onClick={deletePage} */}\n        <SmallButton>&times;</SmallButton>\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default PageRow;\n","C:\\Users\\topsecret\\WebstormProjects\\bachelor-mern\\client\\src\\components\\modals\\NavDropdownModal.jsx",["331"],"import React, {useEffect, useState} from \"react\"\r\nimport {Modal} from \"react-bootstrap\"\r\nimport Select from \"react-select\";\r\n\r\nconst NavDropdownModal = ({pages, navbar, setNavbar, showModal, setShowModal}) => {\r\n\r\n  const [options, setOptions] = useState(getOptions());\r\n\r\n  useEffect(() => {\r\n    if (!navbar.children) {\r\n      setNavbar({\r\n        ...navbar,\r\n        title: 'placeholder',\r\n        children: []\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  function getOptions() {\r\n    return pages.map(p => {\r\n      return {\r\n        value: p.path,\r\n        label: p.title\r\n      }\r\n    })\r\n  }\r\n\r\n  const Item = ({child}) => {\r\n    console.log(child)\r\n\r\n    const remove = () => {\r\n      // remove\r\n      setNavbar({\r\n        ...navbar,\r\n        children: navbar.children.filter(ch => ch.path !== child.path)\r\n      })\r\n      // add\r\n      setOptions([...options, {value: child.path, label: child.title}])\r\n    }\r\n\r\n    return (\r\n      <p>{child.title}<span className='pl-2' onClick={remove}>&times;</span></p>\r\n    )\r\n  }\r\n\r\n\r\n  const Selector = () => {\r\n\r\n    const handleSelect = (data) => {\r\n      // add\r\n      setNavbar({\r\n        ...navbar,\r\n        children: [\r\n          ...navbar.children,\r\n          {\r\n            title: data.label,\r\n            path: data.value\r\n          }\r\n        ]\r\n      })\r\n      // remove\r\n      setOptions(options.filter(n => n.value !== data.value))\r\n    }\r\n\r\n    return (\r\n    <Select\r\n      options={options}\r\n      placeholder={'put new page'}\r\n      onChange={(data, e) => handleSelect(data, e)}\r\n    />\r\n    )\r\n  }\r\n\r\n  const Dropdown = () => (\r\n    <div className='px-3'>\r\n      <p contentEditable><strong>{navbar?.title}</strong></p>\r\n      {navbar.children?.map(ch => <Item child={ch} />) }\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={() => setShowModal(false)} centered\r\n           size=\"sm\"\r\n    >\r\n      <Modal.Body style={{padding: '1rem'}}>\r\n        <Dropdown />\r\n        <Selector />\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NavDropdownModal;\r\n",{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":9,"column":3,"nodeType":"338","messageId":"339","endLine":13,"endColumn":4},{"ruleId":"340","severity":1,"message":"341","line":25,"column":9,"nodeType":"342","messageId":"343","endLine":25,"endColumn":16},{"ruleId":"340","severity":1,"message":"344","line":2,"column":15,"nodeType":"342","messageId":"343","endLine":2,"endColumn":21},{"ruleId":"340","severity":1,"message":"345","line":2,"column":23,"nodeType":"342","messageId":"343","endLine":2,"endColumn":26},{"ruleId":"340","severity":1,"message":"346","line":2,"column":28,"nodeType":"342","messageId":"343","endLine":2,"endColumn":37},{"ruleId":"340","severity":1,"message":"347","line":5,"column":22,"nodeType":"342","messageId":"343","endLine":5,"endColumn":25},{"ruleId":"340","severity":1,"message":"345","line":5,"column":27,"nodeType":"342","messageId":"343","endLine":5,"endColumn":30},{"ruleId":"340","severity":1,"message":"348","line":25,"column":9,"nodeType":"342","messageId":"343","endLine":25,"endColumn":19},{"ruleId":"332","replacedBy":"349"},{"ruleId":"334","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":82,"column":9,"nodeType":"353","endLine":88,"endColumn":28},{"ruleId":"340","severity":1,"message":"354","line":2,"column":17,"nodeType":"342","messageId":"343","endLine":2,"endColumn":18},{"ruleId":"332","replacedBy":"355"},{"ruleId":"334","replacedBy":"356"},{"ruleId":"340","severity":1,"message":"357","line":1,"column":8,"nodeType":"342","messageId":"343","endLine":1,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":21,"column":6,"nodeType":"360","endLine":21,"endColumn":8,"suggestions":"361"},{"ruleId":"340","severity":1,"message":"362","line":2,"column":23,"nodeType":"342","messageId":"343","endLine":2,"endColumn":29},{"ruleId":"332","replacedBy":"363"},{"ruleId":"334","replacedBy":"364"},{"ruleId":"340","severity":1,"message":"365","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":12},{"ruleId":"358","severity":1,"message":"366","line":16,"column":6,"nodeType":"360","endLine":16,"endColumn":21,"suggestions":"367"},{"ruleId":"340","severity":1,"message":"368","line":9,"column":18,"nodeType":"342","messageId":"343","endLine":9,"endColumn":27},{"ruleId":"340","severity":1,"message":"369","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":16},{"ruleId":"340","severity":1,"message":"370","line":14,"column":18,"nodeType":"342","messageId":"343","endLine":14,"endColumn":27},{"ruleId":"340","severity":1,"message":"371","line":21,"column":9,"nodeType":"342","messageId":"343","endLine":21,"endColumn":24},{"ruleId":"340","severity":1,"message":"372","line":30,"column":9,"nodeType":"342","messageId":"343","endLine":30,"endColumn":22},{"ruleId":"340","severity":1,"message":"373","line":40,"column":9,"nodeType":"342","messageId":"343","endLine":40,"endColumn":18},{"ruleId":"340","severity":1,"message":"374","line":48,"column":9,"nodeType":"342","messageId":"343","endLine":48,"endColumn":22},{"ruleId":"375","severity":1,"message":"376","line":76,"column":11,"nodeType":"353","endLine":76,"endColumn":32},{"ruleId":"340","severity":1,"message":"377","line":1,"column":16,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"344","line":3,"column":9,"nodeType":"342","messageId":"343","endLine":3,"endColumn":15},{"ruleId":"340","severity":1,"message":"378","line":39,"column":11,"nodeType":"342","messageId":"343","endLine":39,"endColumn":22},{"ruleId":"340","severity":1,"message":"379","line":51,"column":11,"nodeType":"342","messageId":"343","endLine":51,"endColumn":15},{"ruleId":"340","severity":1,"message":"380","line":81,"column":9,"nodeType":"342","messageId":"343","endLine":81,"endColumn":19},{"ruleId":"340","severity":1,"message":"381","line":83,"column":14,"nodeType":"342","messageId":"343","endLine":83,"endColumn":23},{"ruleId":"340","severity":1,"message":"382","line":94,"column":9,"nodeType":"342","messageId":"343","endLine":94,"endColumn":19},{"ruleId":"332","replacedBy":"383"},{"ruleId":"334","replacedBy":"384"},{"ruleId":"358","severity":1,"message":"385","line":22,"column":6,"nodeType":"360","endLine":22,"endColumn":8,"suggestions":"386"},{"ruleId":"340","severity":1,"message":"387","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":15},{"ruleId":"340","severity":1,"message":"388","line":6,"column":17,"nodeType":"342","messageId":"343","endLine":6,"endColumn":25},{"ruleId":"340","severity":1,"message":"389","line":7,"column":9,"nodeType":"342","messageId":"343","endLine":7,"endColumn":21},{"ruleId":"332","replacedBy":"390"},{"ruleId":"334","replacedBy":"391"},{"ruleId":"340","severity":1,"message":"392","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":21},{"ruleId":"393","severity":1,"message":"394","line":56,"column":27,"nodeType":"395","messageId":"396","endLine":56,"endColumn":29},{"ruleId":"393","severity":1,"message":"394","line":71,"column":27,"nodeType":"395","messageId":"396","endLine":71,"endColumn":29},{"ruleId":"340","severity":1,"message":"346","line":2,"column":20,"nodeType":"342","messageId":"343","endLine":2,"endColumn":29},{"ruleId":"340","severity":1,"message":"397","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":15},{"ruleId":"340","severity":1,"message":"398","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":19},{"ruleId":"332","replacedBy":"399"},{"ruleId":"334","replacedBy":"400"},{"ruleId":"340","severity":1,"message":"401","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":18},{"ruleId":"340","severity":1,"message":"402","line":8,"column":8,"nodeType":"342","messageId":"343","endLine":8,"endColumn":24},{"ruleId":"340","severity":1,"message":"403","line":9,"column":8,"nodeType":"342","messageId":"343","endLine":9,"endColumn":21},{"ruleId":"340","severity":1,"message":"404","line":10,"column":8,"nodeType":"342","messageId":"343","endLine":10,"endColumn":20},{"ruleId":"340","severity":1,"message":"405","line":30,"column":9,"nodeType":"342","messageId":"343","endLine":30,"endColumn":14},{"ruleId":"340","severity":1,"message":"406","line":2,"column":16,"nodeType":"342","messageId":"343","endLine":2,"endColumn":21},{"ruleId":"340","severity":1,"message":"407","line":5,"column":10,"nodeType":"342","messageId":"343","endLine":5,"endColumn":18},{"ruleId":"340","severity":1,"message":"408","line":111,"column":9,"nodeType":"342","messageId":"343","endLine":111,"endColumn":19},{"ruleId":"358","severity":1,"message":"409","line":17,"column":6,"nodeType":"360","endLine":17,"endColumn":8,"suggestions":"410"},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'editNav' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'onTakeItem' is assigned a value but never used.",["411"],["412"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'C' is defined but never used.",["411"],["412"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["413"],"'Select' is defined but never used.",["411"],["412"],"'uuid' is defined but never used.","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["414"],"'setOrigin' is assigned a value but never used.","'Dropzone' is defined but never used.","'setRadius' is assigned a value but never used.","'handleDropImage' is assigned a value but never used.","'toggleCropper' is assigned a value but never used.","'cropImage' is assigned a value but never used.","'downloadImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'removeChild' is assigned a value but never used.","'hide' is assigned a value but never used.","'HideButton' is assigned a value but never used.","'removeNav' is defined but never used.","'HomeButton' is assigned a value but never used.",["411"],["412"],"React Hook useEffect has missing dependencies: 'page._id' and 'page.title'. Either include them or remove the dependency array.",["415"],"'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","'handleAccept' is assigned a value but never used.",["411"],["412"],"'ButtonGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'MUICard' is defined but never used.","'MUICardSide' is defined but never used.",["411"],["412"],"'IconButton' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'theme' is assigned a value but never used.","'Error' is defined but never used.","'Redirect' is defined but never used.","'isEditable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navbar' and 'setNavbar'. Either include them or remove the dependency array. If 'setNavbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["416"],"no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},"Update the dependencies array to be: [url]",{"range":"425","text":"426"},"Update the dependencies array to be: [defaultValues, reset]",{"range":"427","text":"428"},"Update the dependencies array to be: [page._id, page.title]",{"range":"429","text":"430"},"Update the dependencies array to be: [navbar, setNavbar]",{"range":"431","text":"432"},[486,488],"[url]",[602,617],"[defaultValues, reset]",[692,694],"[page._id, page.title]",[437,439],"[navbar, setNavbar]"]